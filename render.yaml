databases:
  - name: temporal
    databaseName: temporal
    user: temporal
    plan: standard
  - name: temporal-visibility
    databaseName: visibility
    user: visibility
    plan: standard

services:
  - type: pserv
    name: temporal-elasticsearch
    autoDeploy: false
    plan: Standard
    env: docker
    dockerfilePath: ./temporal-cluster/elasticsearch/Dockerfile
    envVars:
      - key: PORT
        value: 9200
      - key: ES_JAVA_OPTS
        value: "-Xms100m -Xmx100m"
      - key: xpack.security.enabled
        value: true
      - key: ELASTIC_PASSWORD
        generateValue: true
      - key: cluster.routing.allocation.disk.threshold_enabled
        value: true
      - key: cluster.routing.allocation.disk.watermark.low
        value: 512mb
      - key: cluster.routing.allocation.disk.watermark.high
        value: 256mb
      - key: cluster.routing.allocation.disk.watermark.flood_stage
        value: 128mb
      - key: discovery.type
        value: single-node
  - type: web
    name: temporal-all
    autoDeploy: false
    plan: Standard
    env: docker
    dockerfilePath: ./temporal-cluster/server/auto-setup/Dockerfile
    envVars:
      - key: FRONTEND_GRPC_PORT
        value: 10000
      - key: SERVICES
        value: frontend,matching,history,worker
      - key: DYNAMIC_CONFIG_FILE_PATH
        value: /etc/temporal/dynamicconfig_es.yaml
      - key: SKIP_POSTGRES_DB_CREATION
        value: true
      - key: TEMPORAL_CLI_ADDRESS
        fromService:
          name: temporal-all
          type: web
          property: hostport
      - key: ENABLE_ES
        value: true
      - key: ES_VERSION
        value: v7
      - key: ES_USER
        value: elastic
      - key: ES_PWD
        fromService:
          name: temporal-elasticsearch
          type: pserv
          envVarKey: ELASTIC_PASSWORD
      - key: ES_SEEDS
        fromService:
          name: temporal-elasticsearch
          type: pserv
          property: host
      - key: DB
        value: postgresql
      - key: DBNAME
        fromDatabase:
          name: temporal
          property: database
      - key: DB_PORT
        fromDatabase:
          name: temporal
          property: port
      - key: POSTGRES_USER
        fromDatabase:
          name: temporal
          property: user
      - key: POSTGRES_PWD
        fromDatabase:
          name: temporal
          property: password
      - key: POSTGRES_SEEDS
        fromDatabase:
          name: temporal
          property: host
      - key: VISIBILITY_DBNAME
        fromDatabase:
          name: temporal-visibility
          property: database
      - key: VISIBILITY_DB_PORT
        fromDatabase:
          name: temporal-visibility
          property: port
      - key: VISIBILITY_POSTGRES_USER
        fromDatabase:
          name: temporal-visibility
          property: user
      - key: VISIBILITY_POSTGRES_PWD
        fromDatabase:
          name: temporal-visibility
          property: password
      - key: VISIBILITY_POSTGRES_SEEDS
        fromDatabase:
          name: temporal-visibility
          property: host
  - type: web
    name: temporal-ui
    autoDeploy: false
    plan: Standard
    env: docker
    dockerfilePath: ./temporal-cluster/web/Dockerfile
    envVars:
      - key: PORT
        value: 8088
      - key: TEMPORAL_PERMIT_WRITE_API
        value: true
      - key: TEMPORAL_GRPC_ENDPOINT
        fromService:
          name: temporal-all
          type: web
          property: hostport
  - type: web
    name: app-workflow-trigger
    env: node
    buildCommand: yarn; yarn run build
    startCommand: yarn run start
    envVars:
      - key: TEMPORAL_CLUSTER_HOSTPORT
        fromService:
          name: temporal-all
          type: web
          property: hostport
  - type: worker
    name: app-worker
    env: node
    buildCommand: yarn
    startCommand: yarn run start.worker
    envVars:
      - key: TEMPORAL_CLUSTER_HOSTPORT
        fromService:
          name: temporal-all
          type: web
          property: hostport
